@model WebApplication13.Models.tProduct

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayOutAdmin.cshtml";
}

<h2>Create Product</h2>

 <form action="@Url.Action("Create")" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    
     <div class="form-horizontal">
         <hr />
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })
         <div class="form-group">
             @Html.LabelFor(model => model.fPId, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                 @Html.EditorFor(model => model.fPId, new { htmlAttributes = new { @class = "form-control" } })
                 @Html.ValidationMessageFor(model => model.fPId, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group">
             @Html.LabelFor(model => model.fName, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                 @Html.EditorFor(model => model.fName, new { htmlAttributes = new { @class = "form-control" } })
                 @Html.ValidationMessageFor(model => model.fName, "", new { @class = "text-danger" })
             </div>
         </div>
         <div class="form-group">
             @Html.LabelFor(model => model.kind, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                 @*@Html.EditorFor(model => model.kind, new { htmlAttributes = new { @class = "form-control" } })
                 @Html.ValidationMessageFor(model => model.kind, "", new { @class = "text-danger" })*@
                 <select class="form-control" id="fkind" name="fkind" required style="text-align:center">
                     <option></option>
                     <option>Phone</option>
                     <option>Game</option>
                     <option>TV</option>
                 </select>
             </div>
         </div>

         <div class="form-group">
             @Html.LabelFor(model => model.fPrice, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                 @Html.EditorFor(model => model.fPrice, new { htmlAttributes = new { @class = "form-control" } })
                 @Html.ValidationMessageFor(model => model.fPrice, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group">
             @Html.LabelFor(model => model.fImg, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                 @*@Html.EditorFor(model => model.fImg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fImg, "", new { @class = "text-danger" })*@
                 <input type="file" name="fImg" id="fImg" class="form-control" />
                 <img id="preview" src="#" />
             </div>
         </div>
         <div class="form-group">
             <div class="col-md-offset-2 col-md-10">
                 <input type="submit" value="Create" class="btn btn-info" />
                 @ViewBag.error
             </div>
         </div>
     </div>
 </form>

<div>
    @Html.ActionLink("Back to List", "Adminindex")
</div>
<script>

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                if (input.files[0]) {

                }
                $("#preview").attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#fImg").change(function () {
        readURL(this);
    });

</script>